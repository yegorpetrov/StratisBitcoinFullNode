// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using FxCoin.CryptoPool.DbWallet.Entities.Context;

namespace FxCoin.CryptoPool.DbWallet.Migrations
{
    [DbContext(typeof(DbWalletContext))]
    [Migration("20190328183931_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FxCoin.CryptoPool.DbWallet.Entities.HdAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ChainCode");

                    b.Property<string>("ExtPubKey");

                    b.Property<string>("Seed");

                    b.HasKey("Id");

                    b.ToTable("HdAccount");
                });

            modelBuilder.Entity("FxCoin.CryptoPool.DbWallet.Entities.HdAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Address")
                        .HasMaxLength(64);

                    b.Property<bool>("IsChange");

                    b.Property<byte[]>("PubKey")
                        .HasMaxLength(128);

                    b.Property<byte[]>("ScriptPubKey")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("HdAddress");
                });

            modelBuilder.Entity("FxCoin.CryptoPool.DbWallet.Entities.TxRef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<long>("Amount");

                    b.Property<int>("Index");

                    b.Property<int?>("InputBlock");

                    b.Property<int?>("OutputBlock");

                    b.Property<string>("TxId")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("TxRef");
                });

            modelBuilder.Entity("FxCoin.CryptoPool.DbWallet.Entities.HdAddress", b =>
                {
                    b.HasOne("FxCoin.CryptoPool.DbWallet.Entities.HdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FxCoin.CryptoPool.DbWallet.Entities.TxRef", b =>
                {
                    b.HasOne("FxCoin.CryptoPool.DbWallet.Entities.HdAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
